{"version":3,"sources":["components/location-details.js","components/forecast-summary.js","components/forecast-summaries.js","components/forecast-details.js","components/search-form.js","components/display-error.js","components/App.js","index.js"],"names":["LocationDetails","props","className","city","country","iconStyle","fontSize","margin","textAlign","ForecastSummary","data-testid","moment","date","format","temperature","description","style","name","iconId","icon","value","onClick","onSelect","ForecastSummaries","forecasts","map","forecast","key","max","onForecastSelect","ForecastDetails","min","wind","speed","direction","toUpperCase","humidity","SearchForm","state","searchText","event","this","setState","target","type","onChange","handleInputChange","React","Component","DisplayError","error","App","useState","setForecasts","location","setLocation","selectedDate","setSelectedDate","setError","setInitialState","useEffect","axios","get","then","data","catch","err","console","log","selectedForecast","find","res","status","message","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2c60056.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LocationDetails = (props) => (\r\n  <h1 className=\"location-details\">\r\n    {props.city}, {props.country}\r\n  </h1>\r\n);\r\n\r\nLocationDetails.propTypes = {\r\n  city: PropTypes.string.isRequired,\r\n  country: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LocationDetails;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport WeatherIcon from \"react-icons-weather\";\r\n\r\nconst iconStyle = {\r\n  fontSize: \"30px\",\r\n  margin: \"10px\",\r\n  textAlign: \"left\",\r\n};\r\n\r\nconst ForecastSummary = (props) => {\r\n  return (\r\n    <div className=\"active\">\r\n      <div>\r\n        <span className=\"date\" data-testid=\"date-id\">\r\n          {moment(props.date).format(\"ddd Do MMM\")}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span className=\"temperature\" data-testid=\"temperature-id\">\r\n          {props.temperature}&deg;C\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span className=\"description\" data-testid=\"description-id\">\r\n          {props.description}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <WeatherIcon\r\n          style={iconStyle}\r\n          className=\"icon\"\r\n          data-testid=\"icon-id\"\r\n          name=\"owm\"\r\n          iconId={props.icon}\r\n        ></WeatherIcon>\r\n      </div>\r\n      <button\r\n        value={\"submit\"}\r\n        onClick={() => {\r\n          props.onSelect(props.date);\r\n        }}\r\n      >\r\n        More Details\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastSummary;\r\n","import React from \"react\";\r\nimport ForecastSummary from \"./forecast-summary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../styles/forecast-summaries.css\";\r\n\r\nconst ForecastSummaries = (props) => (\r\n  <div className=\"forecast-summaries\">\r\n    {props.forecasts.map((forecast) => (\r\n      <ForecastSummary\r\n        key={forecast.date}\r\n        date={forecast.date}\r\n        description={forecast.description}\r\n        icon={forecast.icon}\r\n        temperature={forecast.temperature.max}\r\n        onSelect={props.onForecastSelect}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nForecastSummaries.propTypes = {\r\n  forecasts: PropTypes.array.isRequired,\r\n};\r\nexport default ForecastSummaries;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../styles/forecast-details.css\";\r\n\r\nconst ForecastDetails = (props) => {\r\n  return (\r\n    <div className=\"ForecastDetails\">\r\n      <div>\r\n        <span className=\"date\">\r\n          Date: {moment(props.forecast.date).format(\"ddd Do MMM\")}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span className=\"max-temp\">\r\n          Max temperature: {props.forecast.temperature.max}&deg;C\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span className=\"min-temp\">\r\n          Min temperature: {props.forecast.temperature.min}&deg;C\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span className=\"wind-speed\">\r\n          Wind speed: {props.forecast.wind.speed} mph\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span className=\"wind-direction\">\r\n          Wind direction: {props.forecast.wind.direction.toUpperCase()}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <span className=\"humidity\">Humidity: {props.forecast.humidity}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastDetails;\r\n","import React from \"react\";\r\n\r\nimport \"../styles/search-form.css\";\r\n\r\nclass SearchForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { searchText: \"\" };\r\n  }\r\n  handleInputChange(event) {\r\n    this.setState({ searchText: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-bar\">\r\n        <input\r\n          value={this.searchText}\r\n          type=\"text\"\r\n          onChange={(event) => this.handleInputChange(event)}\r\n        ></input>\r\n        <button\r\n          value=\"submit\"\r\n          onClick={() => this.props.onSelect(this.state.searchText)}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport \"../styles/display-error.css\";\r\n\r\nconst DisplayError = (props) => {\r\n  return (\r\n    <div className=\"error\">\r\n      <span>{props.error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayError;\r\n","import React, { useState, useEffect } from \"react\";\nimport LocationDetails from \"./location-details\";\nimport ForecastSummaries from \"./forecast-summaries\";\nimport ForecastDetails from \"./forecast-details\";\nimport SearchForm from \"./search-form\";\nimport DisplayError from \"./display-error\";\nimport axios from \"axios\";\n\nimport \"../App.css\";\nimport \"../styles/app.css\";\n\nconst App = () => {\n  const [forecasts, setForecasts] = useState([]);\n  const [location, setLocation] = useState({ city: \"\", country: \"\" });\n  const [selectedDate = 0, setSelectedDate] = useState();\n  const [error, setError] = useState();\n\n  const [, setInitialState] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"https://mcr-codes-weather.herokuapp.com/forecast\")\n      .then(({ data }) => {\n        setForecasts(data.forecasts);\n        setLocation(data.location);\n        setInitialState(true);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleForecastSelect = (date) => {\n    if (selectedDate === date) {\n      setSelectedDate(0);\n    } else {\n      setSelectedDate(date);\n    }\n  };\n\n  const handleLocationSelect = (city) => {\n    axios\n      .get(`https://mcr-codes-weather.herokuapp.com/forecast?city=${city}`)\n      .then((res) => {\n        if (res.status === 200) {\n          setError(\"\");\n        }\n        setLocation(res.data.location);\n        setForecasts(res.data.forecasts);\n      })\n      .catch((err) => {\n        if (err.message === \"Request failed with status code 404\") {\n          setError(\"The location could not be found.\");\n        } else {\n          setError(\"There has been a server side error.\");\n        }\n      });\n  };\n\n  const selectedForecast = forecasts.find(\n    (forecast) => forecast.date === selectedDate\n  );\n\n  return (\n    <div className=\"container\">\n      <LocationDetails city={location.city} country={location.country} />\n      <SearchForm onSelect={handleLocationSelect} />\n      {error && <DisplayError error={error} />}\n      <ForecastSummaries\n        onForecastSelect={handleForecastSelect}\n        forecasts={forecasts}\n        className=\"forecast\"\n      />\n      {selectedForecast && <ForecastDetails forecast={selectedForecast} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}